AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline que despliega Infra y API

Resources:

  ##########################
  # Role para CodePipeline
  ##########################
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  ##########################
  # Artifact Store (S3)
  ##########################
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub codepipeline-artifacts-${AWS::AccountId}-${AWS::Region}

  ##########################
  # CodePipeline
  ##########################
  DeploymentPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ServerlessCrudPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: manueleperez        # <-- cambia por tu org/usuario GitHub
                Repo: code-challenges-serverless-guru # <-- cambia por tu repo
                Branch: main               # <-- rama que dispara el pipeline
                OAuthToken: "{{resolve:secretsmanager:github-token:SecretString:token}}"
              OutputArtifacts:
                - Name: SourceOutput

        - Name: Build
          Actions:
            - Name: CodeBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: MiProyectoBuild  # <-- el CodeBuild que definimos antes

        - Name: DeployInfra
          Actions:
            - Name: DeployInfraStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: infra-stack
                TemplatePath: BuildOutput::template/infra.yml
                Capabilities: CAPABILITY_NAMED_IAM

        - Name: DeployApi
          Actions:
            - Name: DeployApiStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: api-stack
                TemplatePath: BuildOutput::template/api.yml

Outputs:
  PipelineName:
    Value: !Ref DeploymentPipeline
    Export:
      Name: ServerlessCrudPipeline